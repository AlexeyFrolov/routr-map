{"version":3,"sources":["../../src/__tests__/gen-url.js"],"names":[],"mappings":";;;;sBAAmB,WAAW;;;;AAE9B,QAAQ,CAAC,gBAAgB,EAAE,YAAM;AAC7B,QAAM,MAAM,GAAG,wBAAW,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;;AAEpD,MAAE,CAAC,iCAAiC,EAAE,YAAM;AACxC,cAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,EAAC,EAAE,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AACxF,cAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,EAAC,EAAE,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACzE,CAAC,CAAC;;AAEH,MAAE,CAAC,gCAAgC,EAAE,YAAM;AACvC,cAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtD,CAAC,CAAC;;AAEH,MAAE,CAAC,gCAAgC,EAAE,YAAM;AACvC,cAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAC,EAAE,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAC3E,CAAC,CAAC;;AAEH,MAAE,CAAC,mFAAmF,EAAE,YAAM;AAC1F,cAAM,CAAC;mBAAM,MAAM,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,EAAC,GAAG,EAAE,CAAC,EAAC,EAAC,CAAC;SAAA,CAAC,CAC/D,OAAO,CAAC,IAAI,KAAK,CAAC,qCAAmC,CAAC,CAAC,CAAC;;;;KAIhE,CAAC,CAAC;CACN,CAAC,CAAC","file":"gen-url.js","sourcesContent":["import Router from \"../router\";\n\ndescribe('Url generation', () => {\n    const router = new Router(require('./data/routes'));\n\n    it('should generate url with params', () => {\n        expect(router.url({name: 'users.comments', params: {id: 1}})).toBe('/users/1/comments');\n        expect(router.url({name: 'users', params: {id: 1}})).toBe('/users/1');\n    });\n\n    it('should generate url w/o params', () => {\n        expect(router.url({name: 'users'})).toBe('/users');\n    });\n\n    it('should generate url with query', () => {\n        expect(router.url({name: 'users', query: {id: 1}})).toBe('/users?id=1');\n    });\n\n    it('should throw an exception if route requires params but no correct params provided', () => {\n        expect(() => router.url({name: 'users.comments', params: {idd: 1}}))\n            .toThrow(new Error(\"Parameter 'id' should be provided\"));\n\n        //expect(() => router.url({name: 'users.commentss', params: {idd: 1}}))\n        //    .toThrow(new Error(\"Route with name '\" + name.join(\".\") + \"' does not exists\"));\n    });\n});"]}